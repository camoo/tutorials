networks:
  proxy:
    name: wpdemo-proxy
    driver: bridge
  default:
    name: wpdemo-internal
    driver: bridge

services:
  traefik:
    image: traefik:v3.1
    command:
      - --providers.docker=true
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --api.dashboard=true
      - --log.level=INFO
    ports:
      - "8080:80"
      - "8443:443"
      - "8088:8080" # Traefik dashboard (optional) → http://localhost:8088
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik_dynamic.yml:/etc/traefik/dynamic/traefik_dynamic.yml:ro
      - ./.certs:/certs:ro
    networks:
      - proxy

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${DB_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - default

  wordpress:
    build: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      WORDPRESS_DB_NAME: ${DB_NAME}
    volumes:
      - ./docker/wordpress:/var/www/html
    networks:
      - default
      - proxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=wpdemo-proxy

      # HTTP → HTTPS redirect
      - traefik.http.routers.wp-http.rule=Host(`wp.localhost`)
      - traefik.http.routers.wp-http.entrypoints=web
      - traefik.http.routers.wp-http.middlewares=wp-redirect
      - traefik.http.middlewares.wp-redirect.redirectscheme.scheme=https

      # HTTPS router
      - traefik.http.routers.wp.rule=Host(`wp.localhost`)
      - traefik.http.routers.wp.entrypoints=websecure
      - traefik.http.routers.wp.tls=true
      - traefik.http.services.wp.loadbalancer.server.port=80

  phpmyadmin:
    image: phpmyadmin:latest
    depends_on:
      - db
    environment:
      PMA_HOST: db
      PMA_USER: ${DB_USER}
      PMA_PASSWORD: ${DB_PASSWORD}
    networks:
      - default
      - proxy
    labels:
      - traefik.enable=true
      - traefik.docker.network=wpdemo-proxy

      # HTTP → HTTPS redirect
      - traefik.http.routers.pma-http.rule=Host(`pma.localhost`)
      - traefik.http.routers.pma-http.entrypoints=web
      - traefik.http.routers.pma-http.middlewares=pma-redirect
      - traefik.http.middlewares.pma-redirect.redirectscheme.scheme=https

      # HTTPS router
      - traefik.http.routers.pma.rule=Host(`pma.localhost`)
      - traefik.http.routers.pma.entrypoints=websecure
      - traefik.http.routers.pma.tls=true
      - traefik.http.services.pma.loadbalancer.server.port=80
  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"
  # one-shot container to auto-install WP with WP-CLI
  wpcli:
    image: wordpress:cli-php8.3
    depends_on:
      wordpress:
        condition: service_started
      db:
        condition: service_healthy
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      WORDPRESS_DB_NAME: ${DB_NAME}
    volumes:
      - wp_data:/var/www/html
    entrypoint: >
      bash -lc "
        until wp core is-installed --path=/var/www/html --allow-root; do
          wp core install
            --url='${WP_URL}'
            --title='${WP_TITLE}'
            --admin_user='${WP_ADMIN_USER}'
            --admin_password='${WP_ADMIN_PASS}'
            --admin_email='${WP_ADMIN_EMAIL}'
            --path=/var/www/html
            --allow-root || true;
          sleep 2;
        done
      "
    restart: "no"

volumes:
  db_data:
  wp_data:
